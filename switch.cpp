#include <iostream>
#include <cstdlib>
using namespace std;

/*
  Для чего нужны функции можно почитать в инете, если в кратце, то для упращения вида программы, уменьшения копипаста кода,
  возможности использования этой функции еше где-нибудь, достаточно ее только вызвать. С текущего момента называть все переменные
  и функции  нужно так, чтобы оно отражало то, что в ней хранится. Все названия функций должны начинаться с глагола, все обычные переменные
  с существительного. Исключения булевские переменные, они содержат значение или false или true. Соответственно название такой переменной 
  будет наподобие isFly, is... . 
*/

/*
  Когда ты читаешь код, тебе нужно проходить по всему методу, у тебя он будет в 3000 строк, и хрен ты что там поймешь
  Когда все разделено на функции, то тебе даже не надо заходить внутрь, ты просто по названию функции понимаешь что она делает и что возвращает
  Так просто искать ошибки, да и читать код. А теперь представь что тебе нужно еще в конце это вызвать? Что, снова бы копировал код и вставлял?
  Достаточно просто вызвать функцию и все.
  
  Еще есть вопросы*? 
  Тут?
  я ж сказал,дай время разобраться в том что ты мне щас написал
  
  Сделай отдельную функцию на проверку хочу ли я выполнять еще одну операцию
  Могу написать, потом разберешься и расскажешь как что работает
  Есть вопросы?
  что вот это
  
  boolean вроде есть в паскале
  не помню...
  тип переменной
  как неint
  е там только var integer и ещё какая то не помню а во string
  вот так ты значит учился
  float, double, это я узнал только с книги с++ в паскале этого нет!!!!!
  в паскале 100% есть
  integer, byte, word, real, double, boolean, char и еще какие-то eal была остальные нетr
  Значит ты не учил
  Ладно, опять бессмысленный спор
  Разбирайся и потом читай что такое классы
  
*/

// это определение функции, оно должно быть до вызыва ее
int calculation(int a, int b, char op);
bool isNeedToRepeatAction();

int main()
{
    int x = 0, z = 0;
    char y;
    bool isFirstStart = true;
    
    // цикл проверяет на первый ли запуск или нужен ли повтор операции
    while (isFirstStart || isNeedToRepeatAction())
    {    
        cin >> x >> y >> z ;
        cout << calculation(x, z, y) << endl;
        
        isFirstStart = false;
    }
    //system("pause");
    return 0;
}

bool isNeedToRepeatAction() 
{
    char check = 's';
    while (check != 'N' && check != 'n' && check != 'Y' && check != 'y')
    { 
        cout << "Do you want to repeat operation?: ";
        cin >> check;
    }  
    return check != 'N' && check != 'n';
}

// реализация функции calculation
int calculation(int a, int b, char op)
{
    switch (op){
        case '-':
             // возвращаемое значение из функции
             return a - b;
        case '+':
             // возвращаемое значение из функции
             return a + b;
        case '*':
             // возвращаемое значение из функции
             return a * b;
        case '/':
             // возвращаемое значение из функции
             return a / b;
    }
}
